#!/usr/bin/python

# Original:
#   http://oranlooney.com/make-css-icons-python-image-library/
# Extra bits:
#   Shish on behalf of Civicboom <shish@civicboom.com>

# This work is licensed under the Creative Commons Attribution 3.0 United 
# States License. To view a copy of this license, visit 
# http://creativecommons.org/licenses/by/3.0/us/ or send a letter to Creative
# Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.

import os
import sys
import Image

filenames = sys.argv[1:]
prefixLen = len(os.path.commonprefix(filenames))

iconMap = [(
        fn[prefixLen:].replace("/", "-").replace(".png", ""),
        fn
    ) for fn in filenames]

images = [Image.open(filename) for cssClass, filename in iconMap]
print "%d images will be combined." % len(images)

master_width = max([i.size[0] for i in images])
master_height = sum([i.size[1] for i in images])
print "the master image will by %d by %d" % (master_width, master_height)

print "creating image...",
master = Image.new(
    mode='RGBA',
    size=(master_width, master_height),
    color=(0,0,0,0))  # fully transparent
print "created."

print "adding images...",
offset = 0
for count, image in enumerate(images):
    print "\radding image %d..." % (count+1),
    master.paste(image,(0,offset))
    offset = offset + image.size[1]
print "done."

print "saving icons.png...",
master.save('icons.png')
print "saved."


cssTemplate = '.%s {background-position: 6px %dpx;}\n'

print 'saving icons.css...',
offset = 0
iconCssFile = open('icons.css' ,'w')
iconCssFile.write("""/* common bits */
.icon, .icon_large {background-image:url(icons.png); display:inline-block; vertical-align:top;}
.icon span, .icon_large span {display: none;}
.icon       {width:16px; height:16px;}
.icon_large {width:32px; height:32px;}

/* autogenerated icons */
""")
for count, pair in enumerate(iconMap):
    cssClass, filename = pair
    cssClass = "icon_" + cssClass[:-5] # translate from autogenerated (filename, eg foo-icon) to civicboom style (eg icon_foo)
    iconCssFile.write( cssTemplate % (cssClass, 4-offset) )
    offset = offset + image.size[1]
iconCssFile.close()
print 'created.'


